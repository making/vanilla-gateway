name: CI
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '11.x'
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: mvn test
      run: |
        set -ex
        ./mvnw -V test
    #    - name: mvn spring-boot:build-image
    #      if: github.ref == 'refs/heads/master'
    #      env:
    #        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    #        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    #        DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
    #        IMAGE_NAME: ghcr.io/making/vanilla-gateway
    #      run: |
    #        set -ex
    #        docker login ${DOCKER_REGISTRY} -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}
    #        BOOT_VERSION=$(grep '<version>' pom.xml | head -n 1 | sed -e 's|<version>||g' -e 's|</version>||g' -e 's|<.*>||g' -e 's| ||g' -e 's|	||g')
    #        set +e
    #        docker pull ${IMAGE_NAME}
    #        set -e
    #        ./mvnw -V spring-boot:build-image -Dspring-boot.build-image.imageName=${IMAGE_NAME} -Dspring-boot.version=${BOOT_VERSION} -Dmaven.test.skip=true
    #        docker push ${IMAGE_NAME}
    - name: download-kp-cli
      if: github.ref == 'refs/heads/master'
      env:
        KP_VERSION: 0.3.1
      run: |
        set -e
        wget -q https://github.com/vmware-tanzu/kpack-cli/releases/download/v${KP_VERSION}/kp-linux-${KP_VERSION} -O kp
        chmod +x ./kp
    - name: kubeconfig
      if: github.ref == 'refs/heads/master'
      uses: azure/k8s-set-context@v1
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KPACK_KUBECONFIG }}
    - name: build-image
      if: github.ref == 'refs/heads/master'
      env:
        APP_NAME: vanilla-gateway
        GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.KPACK_GOOGLE_APPLICATION_CREDENTIALS }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
        IMAGE_NAME: ghcr.io/making/vanilla-gateway
        GIT_REVISION: ${{ github.sha }}
      run: |
        set -e
        docker login ${DOCKER_REGISTRY} -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}
        BOOT_VERSION=$(grep '<version>' pom.xml | head -n 1 | sed -e 's|<version>||g' -e 's|</version>||g' -e 's|<.*>||g' -e 's| ||g' -e 's|	||g')
        cat <<EOF > key.json
        ${GOOGLE_APPLICATION_CREDENTIALS_JSON}
        EOF
        export GOOGLE_APPLICATION_CREDENTIALS=$PWD/key.json
        ./kp image save ${APP_NAME} \
          -n categolj \
          --tag ${IMAGE_NAME} \
          --git https://github.com/making/vanilla-gateway \
          --git-revision ${GIT_REVISION} \
          --wait \
          --env BP_JVM_VERSION=11 \
          --env BP_MAVEN_BUILD_ARGUMENTS="clean package -Dmaven.test.skip=true -Dspring-boot.version=${BOOT_VERSION}"
        ./kp build list -n categolj